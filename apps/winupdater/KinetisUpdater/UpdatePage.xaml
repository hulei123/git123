<!-- 
/*
 * Copyright (c) 2014, Freescale Semiconductor, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
-->
<Page x:Class="KinetisUpdater.UpdatePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:utils="clr-namespace:Utils;assembly=DevSupport"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ViewModel="clr-namespace:KinetisUpdater.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300" Title="Home -> Update">
    <Grid>
        <Grid.Background>
            <!--LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                <GradientStop Color="#FFFB6903"/>
                <GradientStop Color="#FFFFBC79" Offset="1"/>
            </LinearGradientBrush-->
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF0989F3" Offset="0.003"/>
                <GradientStop Color="#FFDDECF9" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Button Content="Home" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10"
                Command="{x:Static NavigationCommands.BrowseBack}" IsDefault="True" IsCancel="True"/>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0">
            <!--Status-->
            <!--Results-->
            <!--Error details-->
            <!--Canceled-->
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <!--Button Content="Update" Margin="5" Width="100" Command="{Binding UpdateCommand}"
                    Visibility="{Binding UpdateCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Invert}"/>
            <Button Content="Cancel" Margin="5" Width="100" Command="{Binding UpdateCommand.CancelCommand}"
                    Visibility="{Binding UpdateCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/-->
                <!--Status-->
                <Label Content="{Binding Status}" Margin="20,5" HorizontalAlignment="Center"
                    Visibility="{Binding UpdateCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--Results-->
                <Label Content="{Binding Status}" Margin="20,5" HorizontalAlignment="Center"
                    Visibility="{Binding UpdateCommand.Execution.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Foreground="Green"/>
                <!--Error details-->
                <Label Content="{Binding UpdateCommand.Execution.ErrorMessage}" Margin="20,5" HorizontalAlignment="Center"
                    Visibility="{Binding UpdateCommand.Execution.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Foreground="Red" />
                <!--Canceled-->
                <Label Content="Canceled" Margin="20,5" HorizontalAlignment="Center"
                    Visibility="{Binding UpdateCommand.Execution.IsCanceled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Foreground="Blue" />
                <ProgressBar Margin="20,5" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"
                    Height="15" Maximum="{Binding Total}" Value="{Binding Value}"/>
                <StackPanel HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Orientation="Horizontal">
                    <Button Content="Update" Margin="5" Width="100" Command="{Binding UpdateCommand}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource multiBoolConverter}">
                                <Binding Path="ImageFileModel.IsEnabled" />
                                <Binding Path="IsConnected" />
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button Content="Connect" Margin="5" Width="100" Command="{Binding ConnectCommand}"
                        Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Invert, FallbackValue=false}"/>
                    <Button Content="Reset" Margin="5" Width="100" Command="{Binding ResetCommand}" 
                        Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=false}"/>
                </StackPanel>
            </StackPanel>
            <StackPanel HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Visibility="{Binding InSecurity, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                <RadioButton Content="Erase All to Unlock" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0"
                    IsChecked="{Binding FlashEraseAllUnsecure}" IsEnabled="{Binding isFlashEraseAllUnsecureSupported}" 
                    ToolTip="All of Internal Flash will be erased to release the security."/>
                <RadioButton Content="Unlock using Backdoor Key" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0"
                    IsChecked="{Binding UnlockWithBackdoorKey}" 
                    ToolTip="Release security before next reset."/>
                <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0"
                    Visibility="{Binding UnlockWithBackdoorKey, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Hidden, FallbackValue=Collapsed}"
                    Text="{Binding BackdoorKey}" Width="125" MaxLength="16"
                    ToolTip="BackdoorKey must be 16 hex digits with no leading &quot;0x&quot;.">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewKeyDown">
                            <ViewModel:InvokeCommandActionWithEventArgs Command="{Binding CheckKeyInput}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Parameter}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>
            <!--Button Content="Update" Margin="5" Width="100" Command="{Binding UpdateCommand}"
                    Visibility="{Binding UpdateCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Invert}"/>
            <Button Content="Cancel" Margin="5" Width="100" Command="{Binding UpdateCommand.CancelCommand}"
                    Visibility="{Binding UpdateCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/-->
        </StackPanel>
    </Grid>
</Page>
