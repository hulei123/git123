###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.3.10732/W32 for ARM       13/Mar/2016  16:47:31
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\bootloader\src\shutdown_cleanup.c
#    Command line =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\bootloader\src\shutdown_cleanup.c
#        -D NDEBUG -D CPU_MK22FN512VDC12 -D CPU_IS_ARM_CORTEX_M4=1 -D IAR -D
#        FREEDOM -D BL_TARGET_FLASH -lC
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\list
#        --diag_suppress Pa050 -o
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "F:\Program Files\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../src\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/include/device\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/autobaud\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/drivers\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/startup\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/drivers/uart\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/hid_device\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/adapter/sources\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/adapter/sources/bm\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/os/bm\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/arch/cortex_m\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/soc/MK22F\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/bsp/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/include/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/bsp/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/common\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/hid\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller/khci\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller/ehci\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/hal\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\list\shutdown_cleanup.lst
#    Object file  =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\obj\shutdown_cleanup.o
#
###############################################################################

C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\bootloader\src\shutdown_cleanup.c
      1          /*
      2           * Copyright (c) 2013, Freescale Semiconductor, Inc.
      3           * All rights reserved.
      4           *
      5           * Redistribution and use in source and binary forms, with or without modification,
      6           * are permitted provided that the following conditions are met:
      7           *
      8           * o Redistributions of source code must retain the above copyright notice, this list
      9           *   of conditions and the following disclaimer.
     10           *
     11           * o Redistributions in binary form must reproduce the above copyright notice, this
     12           *   list of conditions and the following disclaimer in the documentation and/or
     13           *   other materials provided with the distribution.
     14           *
     15           * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
     16           *   contributors may be used to endorse or promote products derived from this
     17           *   software without specific prior written permission.
     18           *
     19           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     20           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     21           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     22           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
     23           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     24           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     25           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
     26           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     27           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     28           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     29           */
     30          #if !defined (BOOTLOADER_HOST)
     31          #include "device/fsl_device_registers.h"
     32          #include "utilities/fsl_rtos_abstraction.h"
     33          #include "utilities/vector_table_info.h"
     34          #include "flash/flash.h"
     35          #include "microseconds/microseconds.h"
     36          #include "bootloader_common.h"
     37          
     38          #endif // BOOTLOADER_HOST
     39          
     40          #include "bootloader/shutdown_cleanup.h"
     41          #include "bootloader/context.h"
     42          
     43          ////////////////////////////////////////////////////////////////////////////////
     44          // Definitions
     45          ////////////////////////////////////////////////////////////////////////////////
     46          extern void init_interrupts(void);
     47          void flash_cache_clear(flash_driver_t * driver);
     48          
     49          ////////////////////////////////////////////////////////////////////////////////
     50          // Code
     51          ////////////////////////////////////////////////////////////////////////////////
     52          
     53          // See shutdown_cleanup.h for documentation of this function.

   \                                 In section .text, align 4, keep-with-next
     54          void shutdown_cleanup(shutdown_type_t shutdown)
     55          {
   \                     shutdown_cleanup: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
     56          #if !defined (BOOTLOADER_HOST)
     57              if (shutdown != kShutdownType_Reset)
   \   00000004   0x2C02             CMP      R4,#+2
   \   00000006   0xD004             BEQ.N    ??shutdown_cleanup_0
     58              {
     59                  // Clear (flush) the flash cache.
     60                  flash_cache_clear(NULL);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       flash_cache_clear
     61              }
     62          
     63              if (shutdown != kShutdownType_Cleanup)
   \   0000000E   0x2C01             CMP      R4,#+1
   \   00000010   0xD00E             BEQ.N    ??shutdown_cleanup_1
     64              {
     65                  // Shutdown all peripherals because they could be active
     66                  uint32_t i;
     67                  for (i = 0; g_peripherals[i].typeMask != 0; i++)
   \                     ??shutdown_cleanup_0: (+1)
   \   00000012   0x2600             MOVS     R6,#+0
   \   00000014   0x4D11             LDR.N    R5,??shutdown_cleanup_2
   \   00000016   0xE006             B.N      ??shutdown_cleanup_3
     68                  {
     69                      if (g_peripherals[i].controlInterface->shutdown)
   \                     ??shutdown_cleanup_4: (+1)
   \   00000018   0x1940             ADDS     R0,R0,R5
   \   0000001A   0x68C1             LDR      R1,[R0, #+12]
   \   0000001C   0x6889             LDR      R1,[R1, #+8]
   \   0000001E   0x000A             MOVS     R2,R1
   \   00000020   0xBF18             IT       NE 
     70                      {
     71                          g_peripherals[i].controlInterface->shutdown(&g_peripherals[i]);
   \   00000022   0x4788             BLXNE    R1
     72                      }
     73                  }
   \   00000024   0x1C76             ADDS     R6,R6,#+1
   \                     ??shutdown_cleanup_3: (+1)
   \   00000026   0x2018             MOVS     R0,#+24
   \   00000028   0x4370             MULS     R0,R0,R6
   \   0000002A   0x5941             LDR      R1,[R0, R5]
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD1F3             BNE.N    ??shutdown_cleanup_4
     74              }
     75          
     76              // If we are permanently exiting the bootloader, there are a few extra things to do.
     77              if (shutdown == kShutdownType_Shutdown)
   \                     ??shutdown_cleanup_1: (+1)
   \   00000030   0xB974             CBNZ.N   R4,??shutdown_cleanup_5
     78              {
     79                  // Turn off global interrupt
     80                  lock_acquire();
   \   00000032   0x.... 0x....      BL       lock_acquire
     81          
     82                  // Shutdown microseconds driver.
     83                  microseconds_shutdown();
   \   00000036   0x.... 0x....      BL       microseconds_shutdown
     84          
     85          #if defined(RCM_FM)
     86                  // Disable force ROM.
     87                  RCM_BWR_FM_FORCEROM(RCM, 0);
     88          
     89                  // Clear status register (bits are w1c).
     90                  RCM_BWR_MR_BOOTROM(RCM, 3);
     91          #endif // defined(RCM_FM)
     92          
     93                  init_interrupts();
   \   0000003A   0x.... 0x....      BL       init_interrupts
     94          
     95                  // Set the VTOR to default.
     96                  SCB->VTOR = kDefaultVectorTableAddress;
   \   0000003E   0x4908             LDR.N    R1,??shutdown_cleanup_2+0x4  ;; 0xe000ed08
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x6008             STR      R0,[R1, #+0]
     97                  
     98                  // Restore clock to default before leaving bootloader.
     99                  configure_clocks(kClockOption_ExitBootloader);
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      BL       configure_clocks
    100          
    101                  // De-initialize hardware such as disabling port clock gate
    102                  deinit_hardware();
   \   0000004A   0x.... 0x....      BL       deinit_hardware
    103          
    104                  //Restore global interrupt.
    105                  __enable_irq();
   \   0000004E   0xB662             CPSIE    I
    106          
    107          #if BL_BYPASS_WATCHDOG
    108                  // De-initialize watchdog
    109                  bootloader_watchdog_deinit();
    110          #endif // BL_BYPASS_WATCHDOG
    111                  
    112          
    113              }
    114          
    115              // Memory barriers for good measure.
    116              __ISB();
   \                     ??shutdown_cleanup_5: (+1)
   \   00000050   0xF3BF 0x8F6F      ISB      
    117              __DSB();
   \   00000054   0xF3BF 0x8F4F      DSB      
    118          #endif
    119          }
   \   00000058   0xBD70             POP      {R4-R6,PC}       ;; return
   \   0000005A   0xBF00             Nop      
   \                     ??shutdown_cleanup_2:
   \   0000005C   0x........         DC32     g_peripherals
   \   00000060   0xE000ED08         DC32     0xe000ed08
    120          
    121          ////////////////////////////////////////////////////////////////////////////////
    122          // EOF
    123          ////////////////////////////////////////////////////////////////////////////////

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   shutdown_cleanup
        16   -- Indirect call
        16   -> configure_clocks
        16   -> deinit_hardware
        16   -> flash_cache_clear
        16   -> init_interrupts
        16   -> lock_acquire
        16   -> microseconds_shutdown


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     100  shutdown_cleanup

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
