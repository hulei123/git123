###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.3.10732/W32 for ARM       13/Mar/2016  16:46:45
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\drivers\flash\src\flash_verify_erase.c
#    Command line =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\drivers\flash\src\flash_verify_erase.c
#        -D NDEBUG -D CPU_MK22FN512VDC12 -D CPU_IS_ARM_CORTEX_M4=1 -D IAR -D
#        FREEDOM -D BL_TARGET_FLASH -lC
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\list
#        --diag_suppress Pa050 -o
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\obj
#        --no_unroll --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "F:\Program Files\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../src\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/include/device\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/autobaud\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/drivers\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/startup\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/drivers/uart\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/hid_device\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/adapter/sources\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/adapter/sources/bm\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/os/bm\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/arch/cortex_m\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/soc/MK22F\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/platform/bsp/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/include/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/bsp/mk22f\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/common\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/hid\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/classes/include\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller/khci\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/device/sources/controller/ehci\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/hal\
#        -I
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader/../../../../src/usb_stack/usb_core/include\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\list\flash_verify_erase.lst
#    Object file  =  
#        C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\targets\MK22F51212\iar\freedom_bootloader\debug\obj\flash_verify_erase.o
#
###############################################################################

C:\Users\hulei\Desktop\FSL_Kinetis_Bootloader_1_2_1\src\drivers\flash\src\flash_verify_erase.c
      1          /*
      2           * Copyright (c) 2013, Freescale Semiconductor, Inc.
      3           * All rights reserved.
      4           *
      5           * Redistribution and use in source and binary forms, with or without modification,
      6           * are permitted provided that the following conditions are met:
      7           *
      8           * o Redistributions of source code must retain the above copyright notice, this list
      9           *   of conditions and the following disclaimer.
     10           *
     11           * o Redistributions in binary form must reproduce the above copyright notice, this
     12           *   list of conditions and the following disclaimer in the documentation and/or
     13           *   other materials provided with the distribution.
     14           *
     15           * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
     16           *   contributors may be used to endorse or promote products derived from this
     17           *   software without specific prior written permission.
     18           *
     19           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     20           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     21           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     22           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
     23           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     24           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     25           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
     26           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     27           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     28           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     29           */
     30          
     31          #include "SSD_FTFx_Common.h"
     32          #include "flash/flash.h"
     33          #include "fsl_platform_common.h"
     34          
     35          ////////////////////////////////////////////////////////////////////////////////
     36          // Code
     37          ////////////////////////////////////////////////////////////////////////////////
     38          
     39          // See flash.h for documentation of this function.

   \                                 In section .text, align 4, keep-with-next
     40          status_t flash_verify_erase(flash_driver_t * driver, uint32_t start, uint32_t lengthInBytes, flash_margin_value_t margin)
     41          {
   \                     flash_verify_erase: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4698             MOV      R8,R3
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x4692             MOV      R10,R2
     42              // Check arguments.
     43              status_t returnCode = flash_check_range(driver, start, lengthInBytes, FSL_FEATURE_FLASH_PFLASH_SECTION_CMD_ADDRESS_ALIGMENT);
   \   0000000C   0x2308             MOVS     R3,#+8
   \   0000000E   0x.... 0x....      BL       flash_check_range
     44              if (returnCode)
   \   00000012   0xBB60             CBNZ.N   R0,??flash_verify_erase_0
     45              {
     46                  return returnCode;
     47              }
     48          
     49              uint32_t blockSize = driver->PFlashTotalSize / driver->PFlashBlockCount;
   \   00000014   0x6860             LDR      R0,[R4, #+4]
   \   00000016   0x68A1             LDR      R1,[R4, #+8]
     50              uint32_t nextBlockStartAddress = ALIGN_UP(start, blockSize);
     51              if (nextBlockStartAddress == start)
     52              {
     53                  nextBlockStartAddress += blockSize;
     54              }
     55          
     56          
     57              uint32_t remainingBytes = lengthInBytes;
   \   00000018   0x4F16             LDR.N    R7,??flash_verify_erase_1  ;; 0x40020007
   \   0000001A   0xFBB0 0xF9F1      UDIV     R9,R0,R1
   \   0000001E   0x4268             RSBS     R0,R5,#+0
   \   00000020   0xF1C9 0x0100      RSB      R1,R9,#+0
   \   00000024   0x4008             ANDS     R0,R1,R0
   \   00000026   0x4246             RSBS     R6,R0,#+0
   \   00000028   0x42AE             CMP      R6,R5
   \   0000002A   0xBF08             IT       EQ 
   \   0000002C   0x444E             ADDEQ    R6,R9,R6
   \   0000002E   0xE003             B.N      ??flash_verify_erase_2
     58          
     59              while (remainingBytes)
     60              {
     61                  uint32_t verifyLength = nextBlockStartAddress - start;
     62                  if (verifyLength > remainingBytes)
     63                  {
     64                      verifyLength = remainingBytes;
     65                  }
     66          
     67                  uint32_t numberOfPhrases = verifyLength / FSL_FEATURE_FLASH_PFLASH_SECTION_CMD_ADDRESS_ALIGMENT;
     68          
     69                  // Fill in verify section command parameters.
     70                  kFCCOBx[0] = start;
     71                  FTFx_WR_FCCOBx(FTFx, 0, FTFx_VERIFY_SECTION);
     72                  FTFx_WR_FCCOBx(FTFx, 4, numberOfPhrases >> 8);
     73                  FTFx_WR_FCCOBx(FTFx, 5, numberOfPhrases & 0xFF);
     74                  FTFx_WR_FCCOBx(FTFx, 6, margin);
     75          
     76                  // calling flash command sequence function to execute the command
     77                  returnCode = flash_command_sequence(driver);
     78                  if (returnCode)
     79                  {
     80                      return returnCode;
     81                  }
     82          
     83                  remainingBytes -= verifyLength;
   \                     ??flash_verify_erase_3: (+1)
   \   00000030   0xEBAA 0x0A0B      SUB      R10,R10,R11
     84                  start += verifyLength;
   \   00000034   0x445D             ADD      R5,R11,R5
     85                  nextBlockStartAddress += blockSize;
   \   00000036   0x444E             ADD      R6,R9,R6
   \                     ??flash_verify_erase_2: (+1)
   \   00000038   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000003C   0xD016             BEQ.N    ??flash_verify_erase_4
   \   0000003E   0x490E             LDR.N    R1,??flash_verify_erase_1+0x4
   \   00000040   0x1B70             SUBS     R0,R6,R5
   \   00000042   0x46D3             MOV      R11,R10
   \   00000044   0x4582             CMP      R10,R0
   \   00000046   0xBF88             IT       HI 
   \   00000048   0x4683             MOVHI    R11,R0
   \   0000004A   0x6809             LDR      R1,[R1, #+0]
   \   0000004C   0x600D             STR      R5,[R1, #+0]
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x7039             STRB     R1,[R7, #+0]
   \   00000052   0xEA4F 0x00DB      LSR      R0,R11,#+3
   \   00000056   0x0A01             LSRS     R1,R0,#+8
   \   00000058   0x7139             STRB     R1,[R7, #+4]
   \   0000005A   0x70F8             STRB     R0,[R7, #+3]
   \   0000005C   0xF887 0x8002      STRB     R8,[R7, #+2]
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0x.... 0x....      BL       flash_command_sequence
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD0E2             BEQ.N    ??flash_verify_erase_3
   \   0000006A   0xE000             B.N      ??flash_verify_erase_0
     86              }
     87          
     88              return kStatus_Success;
   \                     ??flash_verify_erase_4: (+1)
   \   0000006C   0x2000             MOVS     R0,#+0
   \                     ??flash_verify_erase_0: (+1)
   \   0000006E   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \   00000072   0xBF00             Nop      
   \                     ??flash_verify_erase_1:
   \   00000074   0x40020007         DC32     0x40020007
   \   00000078   0x........         DC32     kFCCOBx
     89          }
     90          
     91          ////////////////////////////////////////////////////////////////////////////////
     92          // EOF
     93          ////////////////////////////////////////////////////////////////////////////////
     94          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   flash_verify_erase
        40   -> flash_check_range
        40   -> flash_command_sequence


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     124  flash_verify_erase

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: none
